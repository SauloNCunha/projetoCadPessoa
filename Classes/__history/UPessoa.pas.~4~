unit UPessoa;

interface

uses
 FireDAC.Comp.Client;

type
  TPessoa = class
  private
    FCodigo: Integer;
    FNome: string;
    FNomeFantasia: string;
    FCPFCNPJ: string;
    FTipoPessoa: Integer;
    FEmail: string;
    FSexo: Integer;
    FStatus: Integer;
  public
    property Codigo: Integer read FCodigo write FCodigo;
    property Nome: string read FNome write FNome;
    property NomeFantasia: string read FNomeFantasia write FNomeFantasia;
    property CPFCNPJ: string read FCPFCNPJ write FCPFCNPJ;
    property TipoPessoa: Integer read FTipoPessoa write FTipoPessoa;
    property Email: string read FEmail write FEmail;
    property Sexo: Integer read FSexo write FSexo;
    property Status: Integer read FStatus write FStatus;

    procedure Inserir;
    procedure Excluir;
    procedure Atualizar;
    procedure ConsultarPorNome(Nome: string);
  end;

implementation

uses
  unitDM;

procedure TPessoa.Inserir;
var
  Query: TFDQuery;
begin
     Query := TFDQuery.Create(nil);
     try
            Query.Connection := DM.conBanco;

            Query.SQL.Text := 'INSERT INTO PESSOA (NOME, NOMEFANTASIA, CPFCNPJ, TIPOPESSOA, ' +
                              'EMAIL, SEXO, STATUS) VALUES (:NOME, :NOMEFANTASIA, :CPFCNPJ, ' +
                              ':TIPOPESSOA, :EMAIL, :SEXO, :STATUS)';
            Query.ParamByName('NOME').AsString := FNome;
            Query.ParamByName('NOMEFANTASIA').AsString := FNomeFantasia;
            Query.ParamByName('CPFCNPJ').AsString := FCPFCNPJ;
            Query.ParamByName('TIPOPESSOA').AsInteger := FTipoPessoa;
            Query.ParamByName('EMAIL').AsString := FEmail;
            Query.ParamByName('SEXO').AsInteger := FSexo;
            Query.ParamByName('STATUS').AsInteger := FStatus;

            Query.ExecSQL;
     finally
            Query.Free;
     end;
end;

end.

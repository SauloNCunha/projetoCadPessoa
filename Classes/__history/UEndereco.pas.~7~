unit UEndereco;

interface
uses
 FireDAC.Comp.Client;

type
  TEndereco = class
  private
    FCodigo: Integer;
    FPessoa: Integer;
    FCEP: string;
    FLogradouro: string;
    FNumero: string;
    FBairro: string;
    FComplemento: string;
    FCidade: Integer;
    FUF: Integer;
  public
    property Codigo: Integer read FCodigo write FCodigo;
    property Pessoa: Integer read FPessoa write FPessoa;
    property CEP: string read FCEP write FCEP;
    property Logradouro: string read FLogradouro write FLogradouro;
    property Numero: string read FNumero write FNumero;
    property Bairro: string read FBairro write FBairro;
    property Complemento: string read FComplemento write FComplemento;
    property Cidade: Integer read FCidade write FCidade;
    property UF: Integer read FUF write FUF;

    procedure Inserir;
    procedure Excluir;
    procedure Atualizar;
    procedure ConsultarPorPessoa(PessoaID: Integer);
  end;


implementation

uses
  unitDM;

procedure TEndereco.Inserir;
var
  Query: TFDQuery;
begin
     Query := TFDQuery.Create(nil);
     try
            Query.Connection := dm.conBanco;

            Query.SQL.Text := 'INSERT INTO ENDERECO (PESSOA, CEP, LOUGRADOURO, NUMERO, BAIRRO, ' +
                              'COMPLEMENTO, CIDADE, UF) VALUES (:PESSOA, :CEP, :LOGRADOURO, ' +
                              ':NUMERO, :BAIRRO, :COMPLEMENTO, :CIDADE, :UF)';
            Query.ParamByName('PESSOA').AsInteger := FPessoa;
            Query.ParamByName('CEP').AsString := FCEP;
            Query.ParamByName('LOGRADOURO').AsString := FLogradouro;
            Query.ParamByName('NUMERO').AsString := FNumero;
            Query.ParamByName('BAIRRO').AsString := FBairro;
            Query.ParamByName('COMPLEMENTO').AsString := FComplemento;
            Query.ParamByName('CIDADE').AsInteger := FCidade;
            Query.ParamByName('UF').AsInteger := FUF;

            Query.ExecSQL;
     finally
            Query.Free;
     end;
end;

end.
